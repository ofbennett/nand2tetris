// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array twoToThe;

    /** Initializes the library. */
    function void init() {
        var int i;
        var int prev;
        let twoToThe = Array.new(16);
        let twoToThe[0] = 1;

        let i = 1;
        while (i<16){
            let prev = twoToThe[i-1];
            let twoToThe[i] = prev + prev;
            let i = i + 1;
        }
        return;
    }

    function int bit(int x, int j){
        var int y;
        var int z;
        let y = twoToThe[j];
        let z = y & x;
        if (z = 0){
            return 0;
        } else {
            return 1;
        }
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if (x < 0){
            return -x;
        } else {
            return x;
        }
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var int sum;
        var int shiftedX;
        var int j;
        
        let sum = 0;
        let shiftedX = x;
        let j = 0;
        while(j < 16){
            if (Math.bit(y, j) = 1){
                let sum = sum + shiftedX;
            }
            let shiftedX = shiftedX + shiftedX;
            let j = j + 1;
        }

        return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var int q;
        var boolean neg;

        if (((x>0)&(y>0))|((x<0)&(y<0))){
            let neg = false;
        } else {
            let neg = true;
        }
        let x = Math.abs(x);
        let y = Math.abs(y);

        if (y > x){
            return 0;
        }

        let q = Math.divide(x, y + y);

        if ((x - (2 * q * y)) < y) {
            if(neg){
                return -(q + q);
            } else {
                return q + q;
            }
        } else {
            if(neg){
                return -(q + q + 1);
            } else {
                return q + q + 1;
            }
        }
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int y;
        var int j;
        let y = 0;
        let j = 8;
        while (j > -1){
            if ( (((y + twoToThe[j]) * (y + twoToThe[j]) - 1 ) < (x)) & (( (y + twoToThe[j]) * (y + twoToThe[j]) ) > 0) ) {
                let y = y + twoToThe[j];
            }
            let j = j - 1;
        }
        return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if (a > b){
            return a;
        } else {
            return b;
        }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if (a < b){
            return a;
        } else {
            return b;
        }
    }
}
